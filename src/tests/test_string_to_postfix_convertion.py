"""@package tests
Test string to postftix
"""
from duck_calc.math_lib.math_lib import MathLib
import pytest


@pytest.mark.parametrize("problem, result", [
    ("1 + 1", "1 1 +"),
    ("23 + -13", "23 -13 +"),
    ("-17 + -111", "-17 -111 +"),
    ("-126 + 26", "-126 26 +"),
    ("987654321 + 123456789", "987654321 123456789 +"),
    ("-987654321 + 123456789", "-987654321 123456789 +"),
    ("1 - 1", "1 1 -"),
    ("2 - -1", "2 -1 -"),
    ("-7 - -1", "-7 -1 -"),
    ("-16 - 6", "-16 6 -"),
    ("987654321 - 123456789", "987654321 123456789 -"),
    ("-963852741 - 147258369", "-963852741 147258369 -"),
    ("7 + 5 + 8 - 2", "7 5 + 8 + 2 -"),
    ("-449 + 2 * 7 / 2", "-449 2 7 * 2 / +"),
    ("7 / 5 * 6", "7 5 / 6 *"),
    ("17 - 8 * -22 + 7", "17 8 -22 * - 7 +"),
    ("7 + 5 * 8 - 3", "7 5 8 * + 3 -"),
    ("13 + 4 * 5 + 13", "13 4 5 * + 13 +"),
    ("-13 + -4 * 5 + -13", "-13 -4 5 * + -13 +"),
    ("456 + 98 * -96 / 71 + 963", "456 98 -96 * 71 / + 963 +"),
    ("-126 - 26 * 21", "-126 26 21 * -"),
    ("15 + 6 * 233 / 11 - 12", "15 6 233 * 11 / + 12 -"),
    ("1786 * 4 + 98 - 11 / 4 * - 9", "1786 4 * 98 + 11 4 / -9 * -"),
    ("258 / 7 * 46 - 6 - 958 * 41", "258 7 / 46 * 6 - 958 41 * -"),
    ("9 + 14 ^ 45 * 4 - 11 * 7 ^ 1 ^ 2", "9 14 45 ^ 4 * + 11 7 1 2 ^ ^ * -"),

    ("1+1", "1 1 +"),
    ("23+-13", "23 -13 +"),
    ("-17+-111", "-17 -111 +"),
    ("-126+26", "-126 26 +"),
    ("987654321+123456789", "987654321 123456789 +"),
    ("-987654321+123456789", "-987654321 123456789 +"),
    ("1-1", "1 1 -"),
    ("2--1", "2 -1 -"),
    ("-7--1", "-7 -1 -"),
    ("-16-6", "-16 6 -"),
    ("987654321-123456789", "987654321 123456789 -"),
    ("-963852741-147258369", "-963852741 147258369 -"),
    ("7+5+8-2", "7 5 + 8 + 2 -"),
    ("-449+2*7/2", "-449 2 7 * 2 / +"),
    ("7/5*6", "7 5 / 6 *"),
    ("17-8*-22+7", "17 8 -22 * - 7 +"),
    ("7+5*8-3", "7 5 8 * + 3 -"),
    ("13+4*5+13", "13 4 5 * + 13 +"),
    ("-13+-4*5+-13", "-13 -4 5 * + -13 +"),
    ("456+98*-96/71+963", "456 98 -96 * 71 / + 963 +"),
    ("-126-26*21", "-126 26 21 * -"),
    ("15+6*233/11-12", "15 6 233 * 11 / + 12 -"),
    ("1786*4+98-11/4*-9", "1786 4 * 98 + 11 4 / -9 * -"),
    ("258/7*46-6-958*41", "258 7 / 46 * 6 - 958 41 * -"),
    ("9+14^45*4-11*7^1^2", "9 14 45 ^ 4 * + 11 7 1 2 ^ ^ * -"),

])
def test_stringToPostfix_conversion(problem, result):
    assert MathLib.solve_mathematic_problem(problem) == result


@pytest.mark.parametrize("problem", [
    ("Lorem Ipsum"),
    ("1 / 0"),
    ("-1 / 0"),
    ("0 + 1 +"),
    ("0 / 1 /"),
    ("/ 0 / 1"),
    ("55sadf / 2"),
    ("54fa * 2"),
    ("87aef7 +"),
    ("-78sf885 - 2"),
    ("7888 - 0 *"),

    ("1/0"),
    ("-1/0"),
    ("0+1+"),
    ("0/1/"),
    ("/0/1"),
    ("55sadf/2"),
    ("54fa*2"),
    ("87aef7+"),
    ("-78sf885-2"),
    ("788-0 *"),

])
def test_wrong_input(problem):
    result_of_mathlib = MathLib.solve_mathematic_problem(problem)
    assert result_of_mathlib is None
